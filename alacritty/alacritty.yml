# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  TERM: xterm-256color

window:
  # Window dimensions in character columns and lines
  # (changes require restart)
  dimensions:
    columns: 160
    lines: 48

  # Background opacity
  background_opacity: 1.0

  # Adds this many blank pixels of padding around the window
  # Units are physical pixels; this is not DPI aware.
  # (change requires restart)
  padding:
    x: 6
    y: 6

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  dynamic_title: true

  # Window decorations
  # Setting this to false will result in window without borders and title bar.
  decorations: Full

  tabspaces: 2

  opacity: 1.0

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

scrolling: # Maximum number of lines in the scrollback buffer.  Specifying '0' will disable scrolling.  history: 10000
  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 10

  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Regular
  bold:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Bold
  bold_italic:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Bold Italic
  italic:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Italic

  # Point size of the font
  size: 15.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  # offset:
  #  x: 1
  #  y: 1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: true

schemes:
  onedark: &onedark
    primary:
      background: '#282c34'
      foreground: '#abb2bf'
    # cursor:
    #   text:       CellBackground
    #   cursor:     '#528bff' # syntax-cursor-color
    selection:
      text: CellForeground
      background: '#3e4451' # syntax-selection-color
    normal:
      black: '#5c6370' # mono-3
      red: '#e06c75' # red 1
      green: '#98c379'
      yellow: '#e5c07b' # orange 2
      blue: '#61afef'
      magenta: '#c678dd'
      cyan: '#56b6c2'
      white: '#828997' # mono-2

colors: *onedark

debug:
  # Should display the render timer
  render_timer: false

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

selection:
  semantic_escape_chars: ',│`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: true

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  unfocused_hollow: true

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  vi_mode_style: Block

# Live config reload (changes require restart)
live_config_reload: true

# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
  - { key: T, mods: Command, chars: "\x00\x63" } # New window
  - { key: S, mods: Command, chars: "\x00\x2d" } # Horizontal split
  - { key: S, mods: Command|Shift, chars: "\x00\x5c" } # Vertical split
  - { key: H, mods: Command, chars: "\x00\x68" } # Move to left pane
  - { key: J, mods: Command, chars: "\x00\x6a" } # Move to top pane
  - { key: K, mods: Command, chars: "\x00\x6b" } # Move to bottom pane
  - { key: L, mods: Command, chars: "\x00\x6c" } # Move to right pane
  - { key: X, mods: Command, chars: "\x00\x78" } # Close pane
  - { key: Z, mods: Command, chars: "\x00\x7a" } # Zoom pane
  - { key: Comma, mods: Command, chars: "\x00\x2c" } # Rename the current window
  - { key: N, mods: Command, action: SpawnNewInstance }
  - { key: Equals, mods: Command, action: IncreaseFontSize }
  - { key: Minus, mods: Command, action: DecreaseFontSize }
  # (Linux)
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Insert, mods: Shift, action: PasteSelection }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Plus, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  - { key: F11, mods: None, action: ToggleFullscreen }# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  TERM: xterm-256color

window:
  # Window dimensions in character columns and lines
  # (changes require restart)
  dimensions:
    columns: 160
    lines: 48

  # Background opacity
  background_opacity: 1.0

  # Adds this many blank pixels of padding around the window
  # Units are physical pixels; this is not DPI aware.
  # (change requires restart)
  padding:
    x: 6
    y: 6

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  dynamic_title: true

  # Window decorations
  # Setting this to false will result in window without borders and title bar.
  decorations: Full

  tabspaces: 2

  opacity: 1.0

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

scrolling: # Maximum number of lines in the scrollback buffer.  Specifying '0' will disable scrolling.  history: 10000
  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 10

  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Regular
  bold:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Bold
  bold_italic:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Bold Italic
  italic:
    family: 'JetBrainsMonoNL Nerd Font'
    style: Italic

  # Point size of the font
  size: 15.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  # offset:
  #  x: 1
  #  y: 1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: true

schemes:
  onedark: &onedark
    primary:
      background: '#282c34'
      foreground: '#abb2bf'
    # cursor:
    #   text:       CellBackground
    #   cursor:     '#528bff' # syntax-cursor-color
    selection:
      text: CellForeground
      background: '#3e4451' # syntax-selection-color
    normal:
      black: '#5c6370' # mono-3
      red: '#e06c75' # red 1
      green: '#98c379'
      yellow: '#e5c07b' # orange 2
      blue: '#61afef'
      magenta: '#c678dd'
      cyan: '#56b6c2'
      white: '#828997' # mono-2

colors: *onedark

debug:
  # Should display the render timer
  render_timer: false

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

selection:
  semantic_escape_chars: ',│`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: true

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  unfocused_hollow: true

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  vi_mode_style: Block

# Live config reload (changes require restart)
live_config_reload: true

# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
  - { key: T, mods: Command, chars: "\x00\x63" } # New window
  - { key: S, mods: Command, chars: "\x00\x2d" } # Horizontal split
  - { key: S, mods: Command|Shift, chars: "\x00\x5c" } # Vertical split
  - { key: H, mods: Command, chars: "\x00\x68" } # Move to left pane
  - { key: J, mods: Command, chars: "\x00\x6a" } # Move to top pane
  - { key: K, mods: Command, chars: "\x00\x6b" } # Move to bottom pane
  - { key: L, mods: Command, chars: "\x00\x6c" } # Move to right pane
  - { key: X, mods: Command, chars: "\x00\x78" } # Close pane
  - { key: Z, mods: Command, chars: "\x00\x7a" } # Zoom pane
  - { key: Comma, mods: Command, chars: "\x00\x2c" } # Rename the current window
  - { key: N, mods: Command, action: SpawnNewInstance }
  - { key: Equals, mods: Command, action: IncreaseFontSize }
  - { key: Minus, mods: Command, action: DecreaseFontSize }
  # (Linux)
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Insert, mods: Shift, action: PasteSelection }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Plus, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  - { key: F11, mods: None, action: ToggleFullscreen }
